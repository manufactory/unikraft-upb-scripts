#!/bin/sh

is_function()
{

    echo "--------------> ${1}"
    if test -n $1 ; then
	return 1
    fi

    local type_="$(type $1  2>&1)"
    type_="${type_}:false"

    type_prefix="${type_%*function*}"

    type_postfix="${type_#*function*}"

    type_="${type_#${type_prefix}}"
    type_="${type_%${type_postfix}}"

    if test -z $type_; then
	return 1
    fi

    return $(test $type_ = "function")
}

setup_base()
{
    mkdir -p "$top"
    mkdir -p "$libs"
    mkdir -p "$apps"

    if test ! -d "$uk"; then
        git clone https://github.com/unikraft/unikraft "$uk"
    fi
    cd "$uk" > /dev/null
    if is_function "setup_unikraft" ; then
        setup_unikraft
    fi
    cd - > /dev/null
}

install_lib()
{
    l="$1"
    if test ! -d "$libs"/"$l"; then
        git clone https://github.com/unikraft/lib-"$l" "$libs"/"$l"
    fi
    cd "$libs"/"$l" > /dev/null
    if is_function "setup_${l}" ; then
        setup_"$l"
    fi
    cd - > /dev/null
}

all_libs="musl lwip libcxx libcxxabi libunwind compiler-rt libc-test libsodium zlib libuuid python3 sqlite redis nginx micropython gcc libgo zydis libelf"

setup_all_libs()
{
    for l in $all_libs; do
        install_lib "$l"
    done
}

configure()
{
    if test ! -d "$app"; then
        echo "$app folder doesn't exist. Did you run '$0 setup'?" 1>&2
        exit 1
    fi

    cd "$app" > /dev/null
    make menuconfig
    cd - > /dev/null
}

build()
{
    if test ! -d "$app"; then
        echo "$app folder doesn't exist. Did you run '$0 setup'?" 1>&2
        exit 1
    fi

    cd "$app" > /dev/null
    make prepare
    make -j $(nproc)
    cd - > /dev/null
}

DOCKER_REPOSITORY=index.unikraft.io/unikraft.org/hackathons/base:latest

docker_build()
{
    if test ! -d "$app"; then
        echo "$app folder doesn't exist. Did you run '$0 setup'?" 1>&2
        exit 1
    fi

    echo "$top"
    ls $(pwd)/"$top"
    cat > "$top"/build.sh <<END
#!/bin/sh

cd /workdir/apps/app-"$app_basename" > /dev/null
make -j $(nproc)
cd - > /dev/null
END
    chmod a+x "$top"/build.sh
    docker run --rm -it -v $(pwd)/"$top":/workdir "$DOCKER_REPOSITORY" /bin/sh /workdir/build.sh
    rm "$top"/build.sh
}

clean()
{
    if test ! -d "$app"; then
        echo "$app folder doesn't exist. Did you run '$0 setup'?" 1>&2
        exit 1
    fi
    cd "$app" > /dev/null
    make properclean
    git reset --hard HEAD
    cd - > /dev/null
}

docker_clean()
{
    if test ! -d "$app"; then
        echo "$app folder doesn't exist. Did you run '$0 setup'?" 1>&2
        exit 1
    fi

    cat > "$top"/clean.sh <<END
#!/bin/sh

cd /workdir/apps/app-"$app_basename" > /dev/null
make properclean
cd - > /dev/null
END
    chmod a+x "$top"/clean.sh
    docker run --rm -it -v $(pwd)/"$top":/workdir "$DOCKER_REPOSITORY" /bin/sh /workdir/clean.sh
    rm "$top"/clean.sh
}

remove()
{
    rm -fr "$top"
}

_setup_networking()
{
    sudo ip link set dev virbr0 down
    sudo ip link del dev virbr0
    sudo ip link add virbr0 type bridge
    sudo ip address add 172.44.0.1/24 dev virbr0
    sudo ip link set dev virbr0 up
}
